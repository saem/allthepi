/*
 * This file is generated by jOOQ.
 */
package com.github.saem.allthepi.contactbook.backend.database.generated;


import com.github.saem.allthepi.contactbook.backend.database.generated.tables.Contact;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.ContactPhone;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.Databasechangelog;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.Databasechangeloglock;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactBook extends SchemaImpl {

    private static final long serialVersionUID = -385867573;

    /**
     * The reference instance of <code>contact_book</code>
     */
    public static final ContactBook CONTACT_BOOK = new ContactBook();

    /**
     * The table <code>contact_book.contact</code>.
     */
    public final Contact CONTACT = com.github.saem.allthepi.contactbook.backend.database.generated.tables.Contact.CONTACT;

    /**
     * The table <code>contact_book.contact_phone</code>.
     */
    public final ContactPhone CONTACT_PHONE = com.github.saem.allthepi.contactbook.backend.database.generated.tables.ContactPhone.CONTACT_PHONE;

    /**
     * The table <code>contact_book.databasechangelog</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = com.github.saem.allthepi.contactbook.backend.database.generated.tables.Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>contact_book.databasechangeloglock</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = com.github.saem.allthepi.contactbook.backend.database.generated.tables.Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * No further instances allowed
     */
    private ContactBook() {
        super("contact_book", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.CONTACT_NO_SEQ,
            Sequences.CONTACT_PHONE_NO_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Contact.CONTACT,
            ContactPhone.CONTACT_PHONE,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK);
    }
}
