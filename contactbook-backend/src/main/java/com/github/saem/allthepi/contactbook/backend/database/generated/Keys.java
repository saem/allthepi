/*
 * This file is generated by jOOQ.
 */
package com.github.saem.allthepi.contactbook.backend.database.generated;


import com.github.saem.allthepi.contactbook.backend.database.generated.tables.Contact;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.ContactPhone;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.Databasechangeloglock;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.records.ContactPhoneRecord;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.records.ContactRecord;
import com.github.saem.allthepi.contactbook.backend.database.generated.tables.records.DatabasechangeloglockRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>contact_book</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ContactRecord, Long> IDENTITY_CONTACT = Identities0.IDENTITY_CONTACT;
    public static final Identity<ContactPhoneRecord, Long> IDENTITY_CONTACT_PHONE = Identities0.IDENTITY_CONTACT_PHONE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ContactRecord> CONTACT_PKEY = UniqueKeys0.CONTACT_PKEY;
    public static final UniqueKey<ContactRecord> CONTACT_ID_KEY = UniqueKeys0.CONTACT_ID_KEY;
    public static final UniqueKey<ContactPhoneRecord> CONTACT_PHONE_PKEY = UniqueKeys0.CONTACT_PHONE_PKEY;
    public static final UniqueKey<ContactPhoneRecord> CONTACT_PHONE_ID_KEY = UniqueKeys0.CONTACT_PHONE_ID_KEY;
    public static final UniqueKey<DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = UniqueKeys0.PK_DATABASECHANGELOGLOCK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ContactPhoneRecord, ContactRecord> CONTACT_PHONE__CONTACT_PHONE_CONTACT_NO_FKEY = ForeignKeys0.CONTACT_PHONE__CONTACT_PHONE_CONTACT_NO_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ContactRecord, Long> IDENTITY_CONTACT = Internal.createIdentity(Contact.CONTACT, Contact.CONTACT.NO);
        public static Identity<ContactPhoneRecord, Long> IDENTITY_CONTACT_PHONE = Internal.createIdentity(ContactPhone.CONTACT_PHONE, ContactPhone.CONTACT_PHONE.NO);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ContactRecord> CONTACT_PKEY = Internal.createUniqueKey(Contact.CONTACT, "contact_pkey", Contact.CONTACT.NO);
        public static final UniqueKey<ContactRecord> CONTACT_ID_KEY = Internal.createUniqueKey(Contact.CONTACT, "contact_id_key", Contact.CONTACT.ID);
        public static final UniqueKey<ContactPhoneRecord> CONTACT_PHONE_PKEY = Internal.createUniqueKey(ContactPhone.CONTACT_PHONE, "contact_phone_pkey", ContactPhone.CONTACT_PHONE.NO);
        public static final UniqueKey<ContactPhoneRecord> CONTACT_PHONE_ID_KEY = Internal.createUniqueKey(ContactPhone.CONTACT_PHONE, "contact_phone_id_key", ContactPhone.CONTACT_PHONE.ID);
        public static final UniqueKey<DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "pk_databasechangeloglock", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ContactPhoneRecord, ContactRecord> CONTACT_PHONE__CONTACT_PHONE_CONTACT_NO_FKEY = Internal.createForeignKey(com.github.saem.allthepi.contactbook.backend.database.generated.Keys.CONTACT_PKEY, ContactPhone.CONTACT_PHONE, "contact_phone__contact_phone_contact_no_fkey", ContactPhone.CONTACT_PHONE.CONTACT_NO);
    }
}
